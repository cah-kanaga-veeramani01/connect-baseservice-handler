groups:
- jobs:
  - check-pipeline-version
  - deploy-to-fluffle
  - deploy/staging-build
  name: development
- jobs:
  - deploy-to-stage
  name: deploy
- jobs:
  - promote
  name: promote
jobs:
- name: check-pipeline-version
  plan:
  - get: weekly
    trigger: true
  - get: tools
  - get: full-pt
  - config:
      image_resource:
        name: ""
        source:
          password: ((config/artifacts.password))
          repository: artifacts.cahcommtech.com/pipeline-tools17
          tag: latest
          username: ((config/artifacts.username))
        type: docker-image
      inputs:
      - name: tools
      - name: full-pt
      params:
        CONCOURSE_TEAM: program-management
        CURRENT_COMMIT: ae9d3a58ed81ed4d8e0f2f210121de9f2f30f71d
        CURRENT_CONFIG_COMMIT: 7d3e2ed8ad59b5004906116a79e1886a2e1235f8
        DAYS_NEEDED_TO_TRIGGER_WARNING: "60"
        PROJECT_NAME: connect-baseservice-handler
        REGEN_COMMAND: '`gradlew run --args=''connect-baseservice-handler'' &&
          fly -t program-management sp -c connect-baseservice-handler-pipeline.yml
          -p connect-baseservice-handler`'
        REPO: cahcommercial/connect-baseservice-handler
      platform: linux
      run:
        args:
        - -script
        - tools/tasks/check-pipeline-version.main.kts
        path: kotlinc
    on_failure:
      params:
        channel: hidden-leaf-deployments
        text: Pipeline for connect-baseservice-handler is behind master! (More
          details in the failed check-pipeline-version job). Please pull latest pipeline
          tools and regenerate with `gradlew run --args='connect-baseservice-handler'
          && fly -t program-management sp -c connect-baseservice-handler-pipeline.yml
          -p connect-baseservice-handler`
      put: slack-alert
    task: check-version
- name: deploy-to-fluffle
  plan:
  - get: nexus-snapshot
    passed:
    - deploy/staging-build
    trigger: true
  - get: tools
  - get: version-fluffle
  - get: k8s-repo
  - config:
      image_resource:
        name: ""
        source:
          password: ((config/artifacts.password))
          repository: artifacts.cahcommtech.com/pipeline-tools17
          tag: latest
          username: ((config/artifacts.username))
        type: docker-image
      inputs:
      - name: tools
      - name: version
      - name: source
      - name: environment
        optional: true
      outputs:
      - name: out
      params:
        CONFIG_FILE_PATH: source/concourse/config.json
        DEPLOY_TO_ENV: fluffle
        NAME: connect-baseservice-handler
        NEXUS_PASSWORD: ((config/artifacts.password))
        NEXUS_USERNAME: ((config/artifacts.username))
        ROUTES: connect-baseservice-handler-fluffle.apps.internal
        VERSION_FILE: fluffle
      platform: linux
      run:
        path: tools/tasks/k8s/create-yamls.sh
    input_mapping:
      version: version-fluffle
    output_mapping:
      out: generated-ymls
    task: create-yamls
  - config:
      image_resource:
        name: ""
        source:
          password: ((config/artifacts.password))
          repository: artifacts.cahcommtech.com/pipeline-tools17
          tag: latest
          username: ((config/artifacts.username))
        type: docker-image
      inputs:
      - name: tools
      - name: k8s-repo
      - name: generated-ymls
      - name: version
      outputs:
      - name: k8s-repo
      - name: change-count
      params:
        APP_NAME: connect-baseservice-handler
        REPO: cahcommercial/outcomesone-program-management-k8s-application-config
        VERSION_FILE: fluffle
        YMLS_PATH: apps/connect-baseservice-handler/fluffle/connect-baseservice-handler
      platform: linux
      run:
        path: tools/tasks/k8s/commit-ymls.sh
    input_mapping:
      version: version-fluffle
    task: commit-k8s-files
  - params:
      repository: k8s-repo
    put: k8s-repo
- name: deploy-to-stage
  plan:
  - get: tools
  - get: source
  - get: version-stage
    trigger: true
  - get: k8s-repo
  - params:
      channel: hidden-leaf-deployments
      text: Deploying connect-baseservice-handler to stage
    put: slack-alert
  - config:
      image_resource:
        name: ""
        source:
          password: ((config/artifacts.password))
          repository: artifacts.cahcommtech.com/pipeline-tools17
          tag: latest
          username: ((config/artifacts.username))
        type: docker-image
      inputs:
      - name: tools
      - name: version
      - name: source
      - name: environment
        optional: true
      outputs:
      - name: out
      params:
        CONFIG_FILE_PATH: source/concourse/config.json
        DEPLOY_TO_ENV: stage
        NAME: connect-baseservice-handler
        NEXUS_PASSWORD: ((config/artifacts.password))
        NEXUS_USERNAME: ((config/artifacts.username))
        ROUTES: connect-baseservice-handler-stage.apps.internal
        VERSION_FILE: stage
      platform: linux
      run:
        path: tools/tasks/k8s/create-yamls.sh
    input_mapping:
      version: version-stage
    output_mapping:
      out: generated-ymls
    task: create-yamls
  - config:
      image_resource:
        name: ""
        source:
          password: ((config/artifacts.password))
          repository: artifacts.cahcommtech.com/pipeline-tools17
          tag: latest
          username: ((config/artifacts.username))
        type: docker-image
      inputs:
      - name: tools
      - name: k8s-repo
      - name: generated-ymls
      - name: version
      outputs:
      - name: k8s-repo
      - name: change-count
      params:
        APP_NAME: connect-baseservice-handler
        REPO: cahcommercial/outcomesone-program-management-k8s-application-config
        VERSION_FILE: stage
        YMLS_PATH: apps/connect-baseservice-handler/stage/connect-baseservice-handler
      platform: linux
      run:
        path: tools/tasks/k8s/commit-ymls.sh
    input_mapping:
      version: version-stage
    task: commit-k8s-files
  - params:
      repository: k8s-repo
    put: k8s-repo
  - params:
      channel: hidden-leaf-deployments
      text: connect-baseservice-handler stage deployment complete
    put: slack-alert
- name: promote
  plan:
  - get: tools
  - get: version-snapshot
  - get: version-fluffle
  - get: source
  - get: meta
  - config:
      caches:
      - path: source/node_modules
      - path: tools/.mvn/.m2
      image_resource:
        name: ""
        source:
          password: ((config/artifacts.password))
          repository: artifacts.cahcommtech.com/pipeline-tools17
          tag: latest
          username: ((config/artifacts.username))
        type: docker-image
      inputs:
      - name: tools
      - name: version-snapshot
      outputs:
      - name: target
      params:
        ARTIFACT_EXTENSION: zip
        GROUP_ID: com.outcomesone.programmanagement
        NAME: connect-baseservice-handler
        NEXUS_PASSWORD: ((config/artifacts.password))
        NEXUS_USERNAME: ((config/artifacts.username))
      platform: linux
      run:
        path: tools/tasks/promote.sh
    output_mapping:
      target: target
    task: promote_snapshot
  - on_failure:
      params:
        channel: hidden-leaf-deployments
        text: ':this_is_fine: connect-baseservice-handler release push failed
          :this_is_fine:'
      put: slack-alert
    params:
      file: target/*.zip
      version_file: target/version-file
    put: nexus
  - config:
      image_resource:
        name: ""
        source:
          password: ((config/artifacts.password))
          repository: artifacts.cahcommtech.com/pipeline-tools17
          tag: latest
          username: ((config/artifacts.username))
        type: docker-image
      inputs:
      - name: tools
      - name: source
      - name: version-snapshot
      - name: target
      outputs:
      - name: tagRepo
      params:
        BASE_BRANCH: deploy/staging
        MONO_REPO: "false"
        PROJECT_NAME: connect-baseservice-handler
        TAG_WITH_V: "false"
      platform: linux
      run:
        args:
        - -script
        - tools/tasks/tag-release.main.kts
        path: kotlinc
    output_mapping:
      tagRepo: tagRepo
    task: tag_release
  - params:
      only_tag: true
      repository: tagRepo
    put: source
  - config:
      image_resource:
        name: ""
        source:
          password: ((config/artifacts.password))
          repository: artifacts.cahcommtech.com/pipeline-tools17
          tag: latest
          username: ((config/artifacts.username))
        type: docker-image
      inputs:
      - name: tools
      - name: version-snapshot
      - name: version-fluffle
      outputs:
      - name: updatedRepo
      params:
        VERSION_BRANCH: version
      platform: linux
      run:
        path: tools/tasks/increment.sh
    output_mapping:
      updatedRepo: updatedRepo
    task: increment_snapshot
  - params:
      repository: updatedRepo
    put: version-snapshot

- name: deploy/staging-build
  plan:
  - get: tools
  - get: version
  - get: meta
  - get: source
    trigger: true
  - task: run-flyway-migration-scripts
    config:
      container_limits:
        cpu: 0
        memory: 4294967296
      image_resource:
        name: ""
        source:
          password: ((config/artifacts.password))
          repository: artifacts.cahcommtech.com/connect/node
          tag: 16
          username: ((config/artifacts.username))
        type: registry-image
      inputs:
      - name: tools
      - name: source
      params:
        DB_HOST: ((connect-baseservice-handler/stage.db-host))
        DB_NAME: ((connect-baseservice-handler/stage.db-name))
        DB_PASSWORD_DDL: ((connect-baseservice-handler/stage.db-password-ddl))
        DB_SCHEMA: ((connect-baseservice-handler/stage.db-schema))
        DB_USERNAME_DDL: ((connect-baseservice-handler/stage.db-username-ddl))
        NODE_ENV: ((connect-baseservice-handler/stage.node-env))
      platform: linux
      run:
        args:
        - -c
        - |
          ls
          cd source
          echo New
          npm install
          echo Started flyway migration
          npm run migrate
          cd ../
        path: /bin/sh
    on_failure:
      params:
        text: Service config handler => Failed To Execute Flyway Migration Scripts
          In Staging!
      put: slack-alert
    on_success:
      params:
        text: Service config handler => Executed Flyway Migration Scripts In Staging
          Successfully!
      put: slack-alert
  - config:
      caches:
      - path: source/node_modules
      container_limits:
        memory: 2147483648
      image_resource:
        name: ""
        source:
          password: ((config/artifacts.password))
          repository: artifacts.cahcommtech.com/connect/node
          tag: 16
          username: ((config/artifacts.username))
        type: registry-image
      inputs:
      - name: tools
      - name: source
      outputs:
      - name: target
      platform: linux
      run:
        path: tools/tasks/node/publish.sh
    on_failure:
      params:
        channel: hidden-leaf-deployments
        text: ':selfie: connect-baseservice-handler generate snapshot artifact
          failed :selfie:'
      put: slack-alert
    params:
      GIT_PASSWORD: ((config/github.password))
      GIT_REGISTRY_TOKEN: ((config/github.personal_access_token))
      GIT_USERNAME: ((config/github.username))
      NEXUS_PASSWORD: ((config/artifacts.password))
      NEXUS_USERNAME: ((config/artifacts.username))
    task: generate_snapshot_artifact
  - on_failure:
      params:
        attachments:
        - color: '#bc091e'
          text: ':alert_shiny:'
        channel: hidden-leaf-deployments
        text: ':thanos_snap: connect-baseservice-handler snapshot push failed
          :thanos_snap:'
      put: slack-alert
    params:
      file: target/*.zip
      version_file: version/snapshot
    put: nexus-snapshot
resource_types:
- name: http
  source:
    repository: jgriff/http-resource
  type: docker-image
- name: maven-resource
  source:
    password: ((config/artifacts.password))
    repository: artifacts.cahcommtech.com/maven-resource
    username: ((config/artifacts.username))
  type: registry-image
- name: meta
  source:
    password: ((config/artifacts.password))
    repository: artifacts.cahcommtech.com/swce/metadata-resource
    username: ((config/artifacts.username))
  type: registry-image
- name: slack-notification
  source:
    password: ((config/artifacts.password))
    repository: artifacts.cahcommtech.com/cfcommunity/slack-notification-resource
    tag: latest
    username: ((config/artifacts.username))
  type: registry-image
resources:
- check_every: 15m0s
  icon: git
  name: full-pt
  source:
    branch: master
    private_key: ((config/deploy-keys.connect-sidecar-tools))
    uri: git@github.com:cahcommercial/outcomes-pipeline-tools.git
  type: git
- check_every: 15m0s
  icon: git
  name: k8s-repo
  source:
    branch: main
    private_key: ((deploy-keys.k8s-repo))
    uri: git@github.com:cahcommercial/outcomesone-program-management-k8s-application-config.git
  type: git
- name: meta
  source: null
  type: meta
- check_every: 5m0s
  icon: source-repository
  name: nexus
  source:
    artifact: com.outcomesone.programmanagement:connect-baseservice-handler:zip
    password: ((config/artifacts.password))
    url: https://artifacts.cahcommtech.com/repository/commtech-internal/
    username: ((config/artifacts.username))
  type: maven-resource
- check_every: 5m0s
  icon: source-repository
  name: nexus-snapshot
  source:
    artifact: com.outcomesone.programmanagement:connect-baseservice-handler:zip
    debug: true
    password: ((config/artifacts.password))
    snapshot_url: https://artifacts.cahcommtech.com/repository/commtech-internal-snapshots/
    username: ((config/artifacts.username))
  type: maven-resource
- icon: slack
  name: slack-alert
  source:
    url: ((connect-deploy-slack-webhook-url))
  type: slack-notification
- check_every: 5m0s
  icon: git
  name: source
  source:
    branch: deploy/staging
    private_key: ((deploy-keys.connect-baseservice-handler))
    uri: git@github.com:cahcommercial/connect-baseservice-handler
  type: git
- check_every: 5m0s
  icon: git
  name: tools
  source:
    branch: master
    private_key: ((config/deploy-keys.connect-sidecar-tools))
    uri: git@github.com:cahcommercial/outcomes-pipeline-tools
  type: git
  version:
    ref: ae9d3a58ed81ed4d8e0f2f210121de9f2f30f71d
- check_every: 5m0s
  icon: numeric
  name: version
  source:
    branch: version
    private_key: ((deploy-keys.connect-baseservice-handler))
    uri: git@github.com:cahcommercial/connect-baseservice-handler.git
  type: git
- check_every: 30m0s
  icon: numeric
  name: version-fluffle
  source:
    branch: version
    paths:
    - fluffle
    private_key: ((deploy-keys.connect-baseservice-handler))
    uri: git@github.com:cahcommercial/connect-baseservice-handler.git
  type: git
- check_every: 5m0s
  icon: numeric
  name: version-snapshot
  source:
    branch: version
    private_key: ((deploy-keys.connect-baseservice-handler))
    uri: git@github.com:cahcommercial/connect-baseservice-handler.git
  type: git
- check_every: 30m0s
  icon: numeric
  name: version-stage
  source:
    branch: version
    paths:
    - stage
    private_key: ((deploy-keys.connect-baseservice-handler))
    uri: git@github.com:cahcommercial/connect-baseservice-handler.git
  type: git
- check_every: 1h0m0s
  icon: clock-outline
  name: weekly
  source:
    days:
    - Monday
    initial_version: true
    location: America/Chicago
    start: 02:27 AM
    stop: 02:42 AM
  type: time
